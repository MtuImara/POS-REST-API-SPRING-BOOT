package pos.gescom.restApi.fichiersExploitations.clients;

import pos.gescom.restApi.helpers.DateHelper;

public class ClientMapper {

    private ClientMapper() {
    }

    public static ClientMapper getInstance() {
        return new ClientMapper();
    }

    public ClientEntity convertToEntity(ClientDto uDto) {

        ClientEntity client = new ClientEntity();
        client.setDateCreation(DateHelper.now());
        client.setCode(uDto.getCode());
        client.setEmail(uDto.getEmail());
        client.setAdresse(uDto.getAdresse());
        client.setAssujettieTva(uDto.getAssujettieTva());
        client.setInterlocuteur(uDto.getInterlocuteur());
        client.setNom(uDto.getNom());
        client.setPrenom(uDto.getPrenom());
        client.setNif(uDto.getNif());
        client.setRegistreCommerce(uDto.getRegistreCommerce());
        client.setTelephone(uDto.getTelephone());

        return client;
    }

    public ClientDto convertToDto(ClientEntity entity) {

        ClientDto cl = new ClientDto();
        cl.setAdresse(entity.getAdresse());
        cl.setCode(entity.getCode());
        cl.setDateCreation(DateHelper.toText(entity.getDateCreation()));
        cl.setEmail(entity.getEmail());
        cl.setId(entity.getId());
        cl.setAssujettieTva(entity.getAssujettieTva());
        cl.setInterlocuteur(entity.getInterlocuteur());
        cl.setNom(entity.getNom());
        cl.setPhoto(entity.getPhoto());
        cl.setNif(entity.getNif());
        cl.setRegistreCommerce(entity.getRegistreCommerce());
        cl.setPrenom(entity.getPrenom());
        cl.setTelephone(entity.getTelephone());

        cl.setDateCreation(DateHelper.toText(entity.getDateCreation(), "time"));
        cl.setDateModification(DateHelper.toText(entity.getDateModification(), "time"));

        return cl;
    }

}
