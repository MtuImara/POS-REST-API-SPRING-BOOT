package pos.gescom.restApi.fichiersExploitations.stocks.stockDetail;

import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import pos.gescom.restApi.fichiersExploitations.produit.ProduitDto;
import pos.gescom.restApi.fichiersExploitations.stocks.stock.StockDto;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@JsonInclude(value = Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class StockDetailDto {
    private Integer id;
    private StockDto stock;
    private ProduitDto produit;
    private Double quantite;
    private Double prixUnitBrutHT;
    private BigDecimal prixUnitNet;
    private BigDecimal prixTotal;
    private Double remise;
    private BigDecimal montantHT;
    private BigDecimal cump;
    private BigDecimal quantiteEnStock;

    private String dateCreation;
    private String dateModification;

    public StockDetailDto modifyValues(StockDetailDto updated) {

        this.setStock(
                updated.getStock() != null ? updated.getStock() : this.getStock());
        this.setProduit(updated.getProduit() != null ? updated.getProduit() : this.getProduit());
        this.setQuantite(updated.getQuantite() != null ? updated.getQuantite() : this.getQuantite());
        this.setPrixUnitBrutHT(
                updated.getPrixUnitBrutHT() != null ? updated.getPrixUnitBrutHT()
                        : this.getPrixUnitBrutHT());
        this.setPrixUnitNet(
                updated.getPrixUnitNet() != null ? updated.getPrixUnitNet() : this.getPrixUnitNet());
        this.setRemise(updated.getRemise() != null ? updated.getRemise() : this.getRemise());

        this.setDateCreation(updated.getDateCreation() != null ? updated.getDateCreation()
                : this.getDateCreation());
        this.setDateModification(updated.getDateModification() != null ? updated.getDateModification()
                : this.getDateModification());

        return this;
    }
}
