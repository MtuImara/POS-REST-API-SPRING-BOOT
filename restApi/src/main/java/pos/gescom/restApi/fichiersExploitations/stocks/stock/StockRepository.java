package pos.gescom.restApi.fichiersExploitations.stocks.stock;

import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

public interface StockRepository extends JpaRepository<StockEntity, Integer>, JpaSpecificationExecutor<StockEntity> {

    @Query("SELECT count(u) > 0 FROM stockEntity u  WHERE u.code=:code")
    boolean existsByCode(@Param("code") String code);

    @Query("SELECT G FROM StockEntity G WHERE G.code=:code and G.id!=:id")
    Optional<StockEntity> verificationCode(@Param("id") Integer id, @Param("code") String code);

    @Query(value = "SELECT * FROM tbl_stock m WHERE m.id_exercice_comptable=?1 AND m.type_operation=?2", nativeQuery = true)
    Page<StockEntity> getByTypeDeMouvementEtExerciceComptable(Pageable pagingSort,
            Integer idExerciceComptable, Integer typeOperation);

    @Query("SELECT U FROM StockEntity U WHERE U.id=:id AND U.idExerciceComptable=:idExerciceComptable")
    List<StockEntity> getByIdEtExerciceComptable(@Param("id") Integer id,
            @Param("idExerciceComptable") Integer idExerciceComptable);

    @Query("SELECT U FROM StockEntity U WHERE U.idExerciceComptable=:idExerciceComptable")
    Page<StockEntity> getByExerciceComptable(Pageable pagingSort,
            @Param("idExerciceComptable") Integer idExerciceComptable);

}
