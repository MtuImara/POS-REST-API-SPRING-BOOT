package pos.gescom.restApi.fichiersExploitations.stocks.stock;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import pos.gescom.restApi.depotStockage.DepotStockageEntity;
import pos.gescom.restApi.fichiersExploitations.exercice.ExerciceEntity;
import pos.gescom.restApi.fichiersExploitations.fournisseurs.FournisseursEntity;
import pos.gescom.restApi.fichiersExploitations.stocks.stockDetail.StockDetailEntity;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "tbl_stock")
public class StockEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", length = 11)
    private Integer id;

    @Column(name = "type_operation", length = 11)
    private Integer typeOperation;

    @Column(name = "code", unique = true, nullable = false)
    private String code;

    @Column(name = "reference_operation")
    private String referenceOperation;

    @Column(name = "id_depot_de_depart", length = 11, nullable = true)
    private Integer idDepotDeDepart;

    @Column(name = "id_depot_de_destination", length = 11, nullable = true)
    private Integer idDepotDeDestination;

    @Column(name = "commentaire")
    private String commentaire;

    @Column(name = "id_exercice_comptable", length = 11)
    private Integer idExerciceComptable;

    @Column(name = "id_fournisseur")
    private Integer idFournisseur;

    @Column(name = "type_statut", length = 11)
    private Integer typeStatut;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "mouvementStock")
    private List<StockDetailEntity> stockDetail;

    @Column(name = "date_operation")
    @DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
    private Date dateOperation;

    @Column(name = "date_creation")
    @DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
    private Date dateCreation;

    @Column(name = "date_modification")
    @DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
    private Date dateModification;

    @Column(name = "utilisateur_creation")
    private String idUtilisateurCreation;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_exercice_comptable", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private ExerciceEntity exercice;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_fournisseur", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private FournisseursEntity fournisseur;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_depot_de_depart", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private DepotStockageEntity depotDeDepart;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_depot_de_destination", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private DepotStockageEntity depotDeDestination;

}
