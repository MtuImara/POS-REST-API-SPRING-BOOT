package pos.gescom.restApi.fichiersExploitations.produit;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Objects;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.util.StringUtils;

import pos.gescom.restApi.helpers.DateHelper;
import pos.gescom.restApi.helpers.FileHelper;
import pos.gescom.restApi.uploadFiles.UploadFilesEntity;
import pos.gescom.restApi.uploadFiles.UploadFilesRepository;

@Service
public class ProduitService {

    @Autowired
    private ProduitRepository produitRepo;

    @Autowired
    private UploadFilesRepository uploadRepo;

    @Autowired
    private FileHelper fileHelper;

    public ProduitDto getById(int id) {

        ProduitEntity entity = null;
        try {
            entity = produitRepo.getById(id);
            ProduitDto dto = ProduitMapper.getInstance()
                    .convertToDto(entity);
            return dto;
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return null;
        }
    }

    public ProduitDto attachFile(int id, ProduitDto immobilisationDto,
            MultipartFile photo_to_upload, MultipartFile[] facture_to_upload) throws IOException {

        String photo_file = StringUtils.cleanPath(photo_to_upload.getOriginalFilename());

        ProduitEntity converted_imo, updated_imo = null;

        ProduitDto immo = getById(id).modifyValues(immobilisationDto);
        try {

            converted_imo = ProduitMapper.getInstance().convertToEntity(immo);
            converted_imo.setDateModification(DateHelper.now());
            converted_imo.setIconeArticle(photo_file);

            if (immo.getIconeArticle().isEmpty() == false) {
                String path = "src/main/resources/Produit-Icons/" + id;
                File fileToDelete = new File(path);
                if (fileToDelete.exists()) {
                    fileHelper.deleteDirectoryRecursionJava6(fileToDelete);
                }

                String uploadDirPhoto = "Produit-Icons/" + converted_imo.getId();
                fileHelper.saveFile(uploadDirPhoto, photo_file, photo_to_upload);

            }

            if (Objects.nonNull(facture_to_upload)) {
                // delete in server folder
                String path = "";
                String path1 = "";
                path = "../webapps/erp/api/WEB-INF/classes/Produit-Icons/" + id;
                Path uploadPathLocal = Paths.get("src/main/resources/Produit-Icons/");
                if (Files.isDirectory(uploadPathLocal)) {
                    path = "src/main/resources/Produit-Icons/" + id;
                    path1 = "target/classes/Produit-Icons/" + id;
                }
                File fileToDelete = new File(path);
                File fileToDeleteInTarget = new File(path1);
                if (fileToDelete.exists() || fileToDeleteInTarget.exists()) {
                    fileHelper.deleteDirectoryRecursion(fileToDelete);
                    fileHelper.deleteDirectoryRecursion(fileToDeleteInTarget);
                }
                // delete in database all file attached on the retrait
                List<UploadFilesEntity> entity = uploadRepo.findByIdImageProduit(converted_imo.getId());
                if (entity != null && !entity.isEmpty()) {
                    uploadRepo.deleteByIdImageProduit(converted_imo.getId());
                }
                //
                String uploadDir = "Produit-Icons/" + converted_imo.getId();
                for (MultipartFile file : facture_to_upload) {
                    UploadFilesEntity attachement = new UploadFilesEntity();
                    String fileName = StringUtils.cleanPath(file.getOriginalFilename());
                    attachement.setIdImageProduit(converted_imo.getId());
                    attachement.setNomFichier(fileName);
                    uploadRepo.save(attachement);
                    fileHelper.saveFile(uploadDir, fileName, file);

                }
            }

            updated_imo = produitRepo.save(converted_imo);
            immobilisationDto = ProduitMapper.getInstance().convertToDto(updated_imo);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            immobilisationDto = null;
        }

        return immobilisationDto;
    }

}
