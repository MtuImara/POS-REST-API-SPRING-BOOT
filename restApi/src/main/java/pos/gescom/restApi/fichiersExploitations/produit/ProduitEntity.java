package pos.gescom.restApi.fichiersExploitations.produit;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import pos.gescom.restApi.depotStockage.DepotStockageEntity;
import pos.gescom.restApi.fichiersExploitations.categorieProduit.CategorieEntity;
import pos.gescom.restApi.fichiersExploitations.uniteAchatEtVente.UniteAchatEtVenteEntity;
import pos.gescom.restApi.uploadFiles.UploadFilesEntity;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
@Entity
@Table(name = "tbl_produit")
public class ProduitEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", length = 11)
    private Integer id;

    @Column(name = "code", unique = true, nullable = false)
    private String code;

    @Column(name = "designation", length = 100, nullable = false)
    private String designation;

    @Column(name = "prix_vente_unit_ht")
    private Double prixVenteUnitHT;

    @Column(name = "prix_vente_unit_ttc")
    private Double prixVenteUnitTtc;

    @Column(name = "prix_achat")
    private Double prixAchat;

    @Column(name = "seuil_minimal")
    private Double seuilMinimal;

    @Column(name = "seuil_maximal")
    private Double seuilMaximal;

    @Column(name = "coefficient_vente")
    private Double coefficientVente;

    @Column(name = "kit_article")
    private Boolean kitArticle;

    @Column(name = "icone_article")
    private String iconeArticle;

    @Column(name = "code_barre")
    private String codeBarre;

    @Column(name = "id_categorie_produit", nullable = true)
    private Integer idCategorie;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_categorie_produit", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private CategorieEntity categorieProduit;

    @Column(name = "id_depot_stockage", nullable = true)
    private Integer idDepot;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_depot_stockage", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private DepotStockageEntity depotStockage;

    @Column(name = "id_unite_achat", nullable = true)
    private Integer idUniteAchat;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_unite_achat", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private UniteAchatEtVenteEntity uniteAchat;

    @Column(name = "id_unite_vente", nullable = true)
    private Integer idUniteVente;

    @ManyToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "id_unite_vente", referencedColumnName = "id", insertable = false, updatable = false, nullable = false)
    private UniteAchatEtVenteEntity uniteVente;

    @Column(name = "date_creation")
    @DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
    private Date dateCreation;

    @Column(name = "date_modification")
    @DateTimeFormat(pattern = "yyyy-MM-dd hh:mm:ss")
    private Date dateModification;

    @Column(name = "utilisateur_creation")
    private String idUtilisateurCreation;

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "attachementFiles")
    private List<UploadFilesEntity> attachementFiles;

}
