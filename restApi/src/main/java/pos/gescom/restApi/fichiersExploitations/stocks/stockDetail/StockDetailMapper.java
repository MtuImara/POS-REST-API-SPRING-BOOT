package pos.gescom.restApi.fichiersExploitations.stocks.stockDetail;

import java.math.BigDecimal;

import pos.gescom.restApi.fichiersExploitations.stocks.stock.StockMapper;

public class StockDetailMapper {

    public StockDetailMapper() {
    }

    public static StockDetailMapper getInstance() {
        return new StockDetailMapper();
    }

    public StockDetailEntity convertToEntity(StockDetailDto dto) {

        StockDetailEntity entity = new StockDetailEntity();

        entity.setId(dto.getId());
        if (dto.getStock() != null) {
            entity.setIdStock(dto.getStock().getId());
        }
        if (dto.getProduit() != null) {
            entity.setIdProduit(dto.getProduit().getId());
        }
        entity.setQuantite(dto.getQuantite());
        entity.setPrixUnitBrutHT(dto.getPrixUnitBrutHT());
        entity.setRemise(dto.getRemise());

        return entity;
    }

    public StockDetailDto convertToDto(StockDetailEntity entity) {

        StockDetailDto dto = new StockDetailDto();

        dto.setId(entity.getId());

        // if (entity.getStock() != null) {
        // dto.setStock(StockMapper.getInstance().convertToDto(entity.getStock()));
        // }

        dto.setQuantite(entity.getQuantite());
        dto.setPrixUnitBrutHT(entity.getPrixUnitBrutHT());
        dto.setRemise(entity.getRemise());
        if (entity.getRemise() != null) {
            dto.setPrixUnitNet(new BigDecimal(dto.getPrixUnitBrutHT() - dto.getRemise()));
        } else {
            dto.setPrixUnitNet(new BigDecimal(dto.getPrixUnitBrutHT()));
        }
        dto.setMontantHT(new BigDecimal(dto.getQuantite() * dto.getPrixUnitNet().scale()));

        return dto;
    }
}
